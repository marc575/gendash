import { Task } from '@/types/Task';
import { addDays, subDays } from 'date-fns';

export const sampleTasks: Task[] = [
  {
    id: '1',
    title: 'Réunion équipe projet',
    description: 'Point hebdomadaire sur l\'avancement du projet',
    project: 'Management',
    status: 'closed',
    priority: 'High',
    labels: ['réunion', 'équipe'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '2',
    title: 'Revue de code',
    description: 'Revue du code de la nouvelle fonctionnalité',
    project: 'Développement',
    status: 'open',
    priority: 'Medium',
    labels: ['code', 'review'],
    isCompleted: false,
    startTime: addDays(new Date(), 1).toISOString(),
    endTime: addDays(new Date(), 2).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '3',
    title: 'Documentation API',
    description: 'Mettre à jour la documentation de l\'API',
    project: 'Documentation',
    status: 'open',
    priority: 'Low',
    labels: ['documentation', 'api'],
    isCompleted: false,
    startTime: addDays(new Date(), 2).toISOString(),
    endTime: addDays(new Date(), 3).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '4',
    title: 'Debug application mobile',
    description: 'Corriger les bugs signalés sur l\'app mobile',
    project: 'Développement',
    status: 'open',
    priority: 'High',
    labels: ['bug', 'mobile'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '5',
    title: 'Formation React',
    description: 'Préparer la formation React pour les nouveaux',
    project: 'Formation',
    status: 'archived',
    priority: 'Medium',
    labels: ['formation', 'react'],
    isCompleted: false,
    startTime: addDays(new Date(), 5).toISOString(),
    endTime: addDays(new Date(), 6).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '6',
    title: 'Revue de code',
    description: 'Revue du code de la nouvelle fonctionnalité',
    project: 'Développement',
    status: 'completed',
    priority: 'Low',
    labels: ['code', 'review'],
    isCompleted: true,
    startTime: subDays(new Date(), 2).toISOString(),
    endTime: subDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '7',
    title: 'Optimisation performances',
    description: 'Optimiser les performances de l\'application',
    project: 'Développement',
    status: 'open',
    priority: 'High',
    labels: ['performance', 'optimisation'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 3).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '8',
    title: 'Mise en production',
    description: 'Déploiement de la nouvelle version',
    project: 'Déploiement',
    status: 'archived',
    priority: 'High',
    labels: ['déploiement', 'production'],
    isCompleted: false,
    startTime: addDays(new Date(), 1).toISOString(),
    endTime: addDays(new Date(), 2).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '9',
    title: 'Tests automatisés',
    description: 'Écriture des tests automatisés',
    project: 'Tests',
    status: 'open',
    priority: 'Medium',
    labels: ['tests', 'automation'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 4).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '10',
    title: 'Design système',
    description: 'Mise à jour du design système',
    project: 'Design',
    status: 'completed',
    priority: 'Medium',
    labels: ['design', 'ui'],
    isCompleted: true,
    startTime: subDays(new Date(), 3).toISOString(),
    endTime: subDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '11',
    title: 'Analyse des données',
    description: 'Analyse des données utilisateurs',
    project: 'Analyse',
    status: 'archived',
    priority: 'Low',
    labels: ['analyse', 'data'],
    isCompleted: false,
    startTime: addDays(new Date(), 2).toISOString(),
    endTime: addDays(new Date(), 5).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '12',
    title: 'Support client',
    description: 'Répondre aux tickets support',
    project: 'Support',
    status: 'open',
    priority: 'Medium',
    labels: ['support', 'client'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '13',
    title: 'Migration base de données',
    description: 'Migration vers la nouvelle base de données',
    project: 'Migration',
    status: 'archived',
    priority: 'High',
    labels: ['database', 'migration'],
    isCompleted: false,
    startTime: addDays(new Date(), 3).toISOString(),
    endTime: addDays(new Date(), 5).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '14',
    title: 'Rapport mensuel',
    description: 'Préparation du rapport mensuel',
    project: 'Rapport',
    status: 'completed',
    priority: 'Low',
    labels: ['rapport', 'mensuel'],
    isCompleted: true,
    startTime: subDays(new Date(), 5).toISOString(),
    endTime: subDays(new Date(), 4).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '15',
    title: 'Mise à jour sécurité',
    description: 'Application des correctifs de sécurité',
    project: 'Sécurité',
    status: 'archived',
    priority: 'High',
    labels: ['sécurité', 'maintenance'],
    isCompleted: false,
    startTime: addDays(new Date(), 1).toISOString(),
    endTime: addDays(new Date(), 2).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '16',
    title: 'Intégration API',
    description: 'Intégration avec l\'API partenaire',
    project: 'Intégration',
    status: 'open',
    priority: 'Medium',
    labels: ['api', 'integration'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 3).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '17',
    title: 'Workshop UX',
    description: 'Workshop sur l\'expérience utilisateur',
    project: 'UX',
    status: 'archived',
    priority: 'Low',
    labels: ['ux', 'workshop'],
    isCompleted: false,
    startTime: addDays(new Date(), 4).toISOString(),
    endTime: addDays(new Date(), 5).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '18',
    title: 'Audit accessibilité',
    description: 'Audit d\'accessibilité du site',
    project: 'Accessibilité',
    status: 'completed',
    priority: 'Medium',
    labels: ['accessibilité', 'audit'],
    isCompleted: true,
    startTime: subDays(new Date(), 3).toISOString(),
    endTime: subDays(new Date(), 1).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '19',
    title: 'Refactoring code',
    description: 'Refactoring du code legacy',
    project: 'Refactoring',
    status: 'open',
    priority: 'High',
    labels: ['code', 'refactoring'],
    isCompleted: false,
    startTime: new Date().toISOString(),
    endTime: addDays(new Date(), 5).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  },
  {
    id: '20',
    title: 'Planification sprint',
    description: 'Planification du prochain sprint',
    project: 'Sprint',
    status: 'archived',
    priority: 'Medium',
    labels: ['sprint', 'planning'],
    isCompleted: false,
    startTime: addDays(new Date(), 2).toISOString(),
    endTime: addDays(new Date(), 3).toISOString(),
    createdAt: new Date().toISOString(),
    participants: [],
  }
];
